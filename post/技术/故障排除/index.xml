<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>清松小站</title><link>https://coderqs.github.io/post/%E6%8A%80%E6%9C%AF/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</link><description>Recent content on 清松小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://coderqs.github.io/post/%E6%8A%80%E6%9C%AF/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>inux 下用户相关的的问题解决方法</title><link>https://coderqs.github.io/2019/03/inux-%E4%B8%8B%E7%94%A8%E6%88%B7%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0800</pubDate><guid>https://coderqs.github.io/2019/03/inux-%E4%B8%8B%E7%94%A8%E6%88%B7%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="linux-下用户相关的的问题解决方法">Linux 下用户相关的的问题解决方法&lt;/h1>
&lt;h2 id="登录用户出现-bash-42">登录用户出现&lt;code>-bash-4.2$&lt;/code>&lt;/h2>
&lt;h3 id="原因">原因&lt;/h3>
&lt;p>用户家目录下的环境变量文件（&lt;code>.bash_profile&lt;/code> 和 &lt;code>.bashrc&lt;/code>）丢失了&lt;/p>
&lt;h3 id="解决方法">解决方法&lt;/h3>
&lt;p>从主默认文件/etc/skel/下重新拷贝一份配置信息到此用户的家目录下，命令如下&lt;/p>
&lt;div class="highlight">&lt;div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>cp /etc/skel/.bashrc /home/user/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /etc/skel/.bash_profile /home/user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>拷贝完后注销并重新登录用户即可。&lt;/p></description></item><item><title>Linux 系统相关的问题及解决方法</title><link>https://coderqs.github.io/2019/03/linux-%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0800</pubDate><guid>https://coderqs.github.io/2019/03/linux-%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="linux-系统相关的问题及解决方法">Linux 系统相关的问题及解决方法&lt;/h1>
&lt;h2 id="防火墙已开启但没有开放-22-端口却依然可以使用-ssh-连接">防火墙已开启但没有开放 22 端口，却依然可以使用 ssh 连接&lt;/h2>
&lt;h4 id="原因">原因&lt;/h4>
&lt;p>防火墙开放了 ssh 服务，服务把 22
端口开放了。相关的操作可参考防火墙的&lt;a class="link" href="https://coderqs.github.io/%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f/Linux/firewalld%e7%9a%84%e8%a7%84%e5%88%99%e9%85%8d%e7%bd%ae#%e6%9c%8d%e5%8a%a1%e7%ae%a1%e7%90%86" >firewalld的规则配置#服务管理&lt;/a>&lt;/p>
&lt;h2 id="ifconfig-获取不到ip">ifconfig 获取不到ip&lt;/h2>
&lt;h4 id="原因-1">原因&lt;/h4>
&lt;p>NetworkManager 断开或没有管理网卡设备。使用 &lt;code>nmcli d status&lt;/code> 可以查看 NetworkManager 状态。添加管理和启动的方法请查看《&lt;a class="link" href="https://support.huaweicloud.com/trouble-ecs/ecs_trouble_0313.html" target="_blank" rel="noopener"
>CentOS7重启后dhclient未运行，导致IP未获取问题处理&lt;/a>》&lt;/p>
&lt;h2 id="systemctl-报错-codeexited-status203">systemctl 报错 code=exited status=203&lt;/h2>
&lt;h4 id="原因-2">原因&lt;/h4>
&lt;p>systemctl 执行脚本时需要知道脚本的解释器。&lt;/p>
&lt;h4 id="解决方法">解决方法&lt;/h4>
&lt;p>脚本启动命令前指定脚本的解释器，可以参考实例记录: &lt;a class="link" href="https://coderqs.github.io/%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f/linux/%e6%95%85%e9%9a%9c%e6%8e%92%e9%99%a4/%e6%95%85%e9%9a%9c%e8%ae%b0%e5%bd%95/linux%e8%84%9a%e6%9c%ac%e8%87%aa%e5%b7%b1%e5%8f%af%e4%bb%a5%e5%8d%95%e7%8b%ac%e6%89%a7%e8%a1%8c%e4%bd%86%e5%9c%a8service%e6%96%87%e4%bb%b6%e4%b8%ad%e4%bd%bf%e7%94%a8%e5%b0%b1%e9%94%99%e8%af%af" >linux脚本自己可以单独执行但在service文件中使用就错误&lt;/a>。&lt;/p></description></item><item><title>Shell 脚本相关的问题的解决方法</title><link>https://coderqs.github.io/2019/03/shell-%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0800</pubDate><guid>https://coderqs.github.io/2019/03/shell-%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="shell-脚本相关的问题的解决方法">Shell 脚本相关的问题的解决方法&lt;/h1>
&lt;h2 id="-bash--event-not-found">&amp;ldquo;-bash: !&amp;rdquo;: event not found&lt;/h2>
&lt;h4 id="原因">原因&lt;/h4>
&lt;p>&lt;code>!&lt;/code> 是 bash 的特殊字符，用于引用之前以!后面字符串开头的最后一个的命令。&lt;br>
&lt;code>!$&lt;/code> 是获取上一条命令的最后一个参数。&lt;br>
&lt;strong>注意&lt;/strong>：在脚本中，所有历史命令都被禁用，因为它们只在交互式 shell 中才有意义&lt;/p>
&lt;h4 id="解决方法">解决方法&lt;/h4>
&lt;h5 id="方法一">方法一&lt;/h5>
&lt;p>执行 &lt;code>set +H&lt;/code> 临时关闭该功能&lt;/p>
&lt;h5 id="方法二">方法二&lt;/h5>
&lt;p>将该字符串用单引号括起来，双引号不可以&lt;/p>
&lt;h5 id="方法三">方法三&lt;/h5>
&lt;p>在 &lt;code>!&lt;/code> 前添加&lt;code>\&lt;/code>或后面添加空格，&lt;strong>但这种方法有额外的字符混进去&lt;/strong>，所以如果是输入密码的时候出现的问题，这种方法是不可用的。&lt;/p>
&lt;p>参考自&lt;a class="link" href="https://serverfault.com/questions/208265/what-is-bash-event-not-found" target="_blank" rel="noopener"
>What is “-bash: !”: event notfound&amp;quot;&lt;/a>&lt;/p></description></item></channel></rss>