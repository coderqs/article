<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>makrdown on 清松小站</title><link>https://coderqs.github.io/tags/makrdown/</link><description>Recent content in makrdown on 清松小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0800</lastBuildDate><atom:link href="https://coderqs.github.io/tags/makrdown/index.xml" rel="self" type="application/rss+xml"/><item><title>Markdown 语法指南</title><link>https://coderqs.github.io/2019/03/markdown-%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0800</pubDate><guid>https://coderqs.github.io/2019/03/markdown-%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/</guid><description>&lt;h1 id="markdown-语法指南">Markdown 语法指南&lt;/h1>
&lt;blockquote>
&lt;p>Markdown是为网络书写者而生的方便“text-to-HTML”工具，它允许人们用一种易读易写的纯文本格式进行书写，然后将其转化成XHTML（或HTML）。&lt;/p>
&lt;p>Markdown 的特点是“易读易写”，其中可读性是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。&lt;/p>
&lt;p>Markdown 语法的目标是：成为一种适用于网络的书写语言。&lt;/p>
&lt;p>Markdown 不是想要取代HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。&lt;/p>
&lt;p>—— John Gruber&lt;/p>
&lt;/blockquote>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="文字的基本格式">文字的基本格式&lt;/h2>
&lt;h3 id="倾斜">倾斜&lt;/h3>
&lt;p>前后各一个 `*` （星号）或 `_`（下划线符）包围的文本是倾斜文本。&lt;br>
`*倾斜*` *倾斜* `_倾斜_`_倾斜_ 但不能`*` 和 `_` 一样一个的混用，像这样 `*倾斜_`&lt;/p>
&lt;h3 id="加粗">加粗&lt;/h3>
&lt;p>前后各两个 `*` （星号）或 `_`（下划线符）包围的文本是倾斜文本。&lt;br>
`&lt;strong>加粗&lt;/strong>` &lt;strong>加粗&lt;/strong> `&lt;u>加粗&lt;/u>`&lt;u>加粗&lt;/u>&lt;/p>
&lt;h3 id="倾斜并加粗">倾斜并加粗&lt;/h3>
&lt;p>`*&lt;u>倾斜并加粗&lt;/u>*` *&lt;u>倾斜并加粗&lt;/u>*`_&lt;strong>倾斜并加粗&lt;/strong>_` _&lt;strong>倾斜并加粗&lt;/strong>_&lt;/p>
&lt;h3 id="删除线">删除线&lt;/h3>
&lt;p>`~~删除文本~~` ~~删除文本~~&lt;/p>
&lt;h3 id="高亮">高亮&lt;/h3>
&lt;p>`==标记文本==` &amp;lt;mark&amp;gt;标记文本&amp;lt;/mark&amp;gt;&lt;/p>
&lt;p>** 注：该功能不一定所有的 Markdown 都支持，可以使用 html 的&lt;code>&amp;lt;mark&amp;gt;&lt;/code> **&lt;/p>
&lt;h3 id="引用">引用&lt;/h3>
&lt;h4 id="单次引用--单次引用">单次引用 `&amp;gt; 单次引用`&lt;/h4>
&lt;blockquote>
&lt;p>单次引用&lt;/p>
&lt;/blockquote>
&lt;p>#### 嵌套引用 ```&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用1&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用2&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用3&lt;/p>
&lt;/blockquote>
&lt;p>嵌套引用2&lt;/p>
&lt;/blockquote>
&lt;p>嵌套引用1&lt;/p>
&lt;/blockquote>
&lt;p>```&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用1&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用2&lt;/p>
&lt;blockquote>
&lt;p>嵌套引用3&lt;/p>
&lt;/blockquote>
&lt;p>嵌套引用2&lt;/p>
&lt;/blockquote>
&lt;p>嵌套引用1&lt;/p>
&lt;/blockquote>
&lt;p>### 标题 `#` + 空格 可以生成一级标题，也就是对应 html 里的 `&amp;lt;h1&amp;gt;`
标签，几个 `#` 就对应的几级标题，&lt;strong>大部分的 Markdown
最多支持6级标题&lt;/strong>。 ``` #### 四级标题&lt;/p>
&lt;p>##### 五级标题&lt;/p>
&lt;p>###### 六级标题 ``` #### 四级标题&lt;/p>
&lt;p>##### 五级标题&lt;/p>
&lt;p>###### 六级标题&lt;/p>
&lt;p>### 列表
Markdown列表有有序列表、无序列表、任务列表、嵌套列表四种。列表可以嵌套成多级列表。
#### 有序列表 ` 1. 注意，注意的前面有一个空格` 1.
注意，注意前面有一个空格&lt;/p>
&lt;p>#### 无序列表 `+`、`-`、`*`都可以用来标记无序列表 +
这个用的`+` - 这个用的`-` * 这个用的`*`&lt;/p>
&lt;p>#### 任务列表 ``` - [x] 已完成任务 - [ ] 未完成任务 ``` -
[x] 已完成任务 - [ ] 未完成任务&lt;/p>
&lt;p>#### 嵌套列表 列表嵌套只需在子列表中的选项缩进四个空格即可 ``` 1.
任务一：&lt;/p>
&lt;pre>&lt;code> - 任务一嵌套的第一个元素
- 任务一嵌套的第二个元素
&lt;/code>&lt;/pre>
&lt;p>2. 任务二：&lt;/p>
&lt;pre>&lt;code> - 任务二嵌套的第一个元素
- 任务二嵌套的第二个元素
&lt;/code>&lt;/pre>
&lt;p>``` 1. 任务一：&lt;/p>
&lt;pre>&lt;code> - 任务一嵌套的第一个元素
- 任务一嵌套的第二个元素
&lt;/code>&lt;/pre>
&lt;p>2. 任务二：&lt;/p>
&lt;pre>&lt;code> - 任务二嵌套的第一个元素
- 任务二嵌套的第二个元素
&lt;/code>&lt;/pre>
&lt;p>## 链接 ### 网页链接 `[要显示的文字](链接的地址)`，例： ```
[百度](&lt;a class="link" href="https://www.baidu.com" target="_blank" rel="noopener"
>www.baidu.com&lt;/a>) |- 这里有填写前面要显示的文字
[](&lt;a class="link" href="https://www.baidu.com" target="_blank" rel="noopener"
>www.baidu.com&lt;/a>) |- 这里没有填写前面要显示的文字 ```
[百度](&lt;a class="link" href="https://www.baidu.com" target="_blank" rel="noopener"
>www.baidu.com&lt;/a>) |- 这里有填写前面要显示的文字
[](&lt;a class="link" href="https://www.baidu.com" target="_blank" rel="noopener"
>www.baidu.com&lt;/a>) |- 这里没有填写前面要显示的文字&lt;/p>
&lt;p>### 图片 `![注释，可有可无](链接的地址)`，例： ```
![百度的logo](&lt;a class="link" href="https://bkimg.cdn.bcebos.com/pic/b8014a90f603738da97755563251a751f81986184626?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UyNzI=,g_7,xp_5,yp_5/format,f_auto" target="_blank" rel="noopener"
>https://bkimg.cdn.bcebos.com/pic/b8014a90f603738da97755563251a751f81986184626?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UyNzI=,g_7,xp_5,yp_5/format,f_auto&lt;/a>)
```
![百度的logo](&lt;a class="link" href="https://bkimg.cdn.bcebos.com/pic/b8014a90f603738da97755563251a751f81986184626?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UyNzI=,g_7,xp_5,yp_5/format,f_auto" target="_blank" rel="noopener"
>https://bkimg.cdn.bcebos.com/pic/b8014a90f603738da97755563251a751f81986184626?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UyNzI=,g_7,xp_5,yp_5/format,f_auto&lt;/a>)&lt;/p>
&lt;p>### 自动链接/邮箱
自动链接直接用一对尖括号包围即可，`&amp;lt;&lt;a class="link" href="https://wiki2.codeqs.com" target="_blank" rel="noopener"
>https://wiki2.codeqs.com&lt;/a>&amp;gt;`，显示&amp;lt;&lt;a class="link" href="https://wiki2.codeqs.com" target="_blank" rel="noopener"
>https://wiki2.codeqs.com&lt;/a>&amp;gt;&lt;/p>
&lt;p>## 代码 ### 行内代码 使用 \`
(键盘左上角1左边的那个键，不是单引号)包起来的部分 \`代码片段\` 显示
`代码片段`&lt;/p>
&lt;p>### 代码块 使用 3 个 \` (同上)包起来的部分 \`\`\` 代码语言
代码块 \`\`\` ``` c #include &amp;lt;iostream&amp;gt; int main(void) {&lt;/p>
&lt;pre>&lt;code> std::cout &amp;lt;&amp;lt; &amp;quot;hello world&amp;quot; &amp;lt;&amp;lt; std::endl;
return 0;
&lt;/code>&lt;/pre>
&lt;p>} ```&lt;/p>
&lt;p>## 段落
如果是中文书写习惯，每一段的开头，都应该空4个英文字符的宽度。一般在word里，在段首可以直接按`Tab`键实现，但在
Markdown 中，这并不起作用。这就需要使用 html 来实现。&lt;/p>
&lt;p>### 缩进 使用 html 的空格表示方法 ` `, ` `, ` `&lt;/p>
&lt;p>### 对齐 使用 html 的对齐方法 ` &amp;lt;p align=&amp;ldquo;center&amp;rdquo;&amp;gt;`, `&amp;lt;p
align=&amp;ldquo;right&amp;rdquo;&amp;gt;`, ` &amp;lt;p align=&amp;ldquo;left&amp;rdquo;&amp;gt;`&lt;/p>
&lt;p>### 换行 在行尾输入两个空格即可（敲击两下空格键）。&lt;/p>
&lt;p>### 分割线 在标准 Markdown 中，分割线一般由连续的 3
个同样的`-`、`+`、`*`组成，只需这三个符号在同一行且没有字符（除了空格）即可，符号之间有没有空格不影响分割线的生成。如`&amp;ndash;
-`、`+ + +`、`***`都可以。&lt;/p>
&lt;p>## 表格 基本表格 基本的表格方法如下： ```&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Items&lt;/td>
&lt;td>Prices&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:&amp;ndash;:&lt;/td>
&lt;td>: &amp;ndash; :&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apple&lt;/td>
&lt;td>20$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Banana&lt;/td>
&lt;td>25$&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>``` 第一行：表头，两个符号|间的内容是标题；&lt;/p>
&lt;p>第二行：可选，设置表中内容的对齐方式，默认是靠近显示，如下：&lt;/p>
&lt;p>`: &amp;mdash; :` 设置内容水平居中对齐；&lt;/p>
&lt;p>`: &amp;mdash; ` 设置内容左对齐；&lt;/p>
&lt;p>` &amp;mdash; :` 设置内容右对齐；&lt;/p>
&lt;p>## 脚注 ``` markdown 脚注[^1] [^1]: 这里是脚注 ``` 脚注[^1]
[^1]: 这里是脚注&lt;/p>
&lt;p>## 锚点跳转
有这么一种情况：浏览一个很长的文章时，可能只对其中几个章节感兴趣时，需要直接跳转到该章节，这时就需要锚点。&lt;/p>
&lt;p>锚点是是网页制作中超级链接的一种，又叫命名锚记。使用命名锚记可以在文档中设置标记，这些标记通常放在文档的特定主题处或顶部。然后可以创建到这些命名锚记的链接，这些链接可快速将访问者带到指定位置4。&lt;/p>
&lt;p>锚点跳转要注意首先要注意以下两点：&lt;/p>
&lt;p>1. 锚点的标识名称，可使用任意字符，使用锚点跳转； 2.
锚点生成的链接，可以是页内跳转，也可以生成目录； 3.
锚点只对`#`标注的标题生成锚点链接； 4.
锚点的基本格式是：`[跳转标题](#跳转标题)`，注意`()`里的`#`与后面的内容&lt;strong>无空格&lt;/strong>，且只有一个`#`，该符号与正文里的多级标题无关（不管是几级标题，只需要一个`#URL`）；
5.
非英文的锚点字符，在单击跳转时，在浏览器的URL中会按照规则进行&lt;strong>编码&lt;/strong>和&lt;strong>解码&lt;/strong>；&lt;/p>
&lt;p>在使用时还需要记住以下几个问题：&lt;/p>
&lt;p>* 任意 1-6 个#标注的标题都可设置为同名的锚点链接 ```
[标题1](#标题1) [标题2](#标题2) [标题3](#标题3) # 标题1 ## 标题2
### 标题3 ```&lt;/p>
&lt;p>* 大写字母要转换成小写 ``` [Github标题](#github标题) ### Github标题 ``` * 多单词锚点的空格用`-`代替 ``` [Github Heading](#github-heading) ### Github Heading ``` *多级序号需要去除`.` ``` [2.3. Github Heading](#23-github-heading)&lt;/p>
&lt;h3 id="23-github-heading-">2.3. Github Heading ```&lt;/h3></description></item></channel></rss>